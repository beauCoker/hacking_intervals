folder_home <- "../../"
folder_in <- "Data/1_raw/"
folder_out <- "Data/2_preprocessed/"
c(folder_in,folder_out)
strcat(folder_in,folder_out)
paste0(folder_in,folder_out)
paste0(folder_in,folder_out,folder_out)
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
folder_home <- "../../"
folder_in <- paste0(folder_home,"Data/1_raw/")
folder_out <- paste0(folder_home,"Data/2_preprocessed/")
compas <- read_csv(paste0(folder_in,"compas-scores-two-years.csv"))
nrow(compas)
# There are some redundant features that we can drop
compas <- compas %>%
select(-compas_screening_date, -v_screening_date,
-priors_count_1, -decile_score_1,
-violent_recid,
-type_of_assessment, -v_type_of_assessment)
# Filtering that we attribute to data quality
compas <- compas %>%
filter(!(is.na(c_days_from_compas))) %>%
filter(c_days_from_compas <= 30) %>%
filter(c_charge_degree %in% c("F","M"))
# Format features
compas <- compas %>%
mutate(age_screening =  floor(as.numeric(as.period(interval(dob,screening_date)), "years"))) %>%
mutate(sex_Male = ifelse(sex=="Male",1,0)) %>%
mutate(c_charge_degree_F = if_else(c_charge_degree=="F",1,0)) %>%
mutate(age_18_20 = ifelse(age_screening>=18 & age_screening<=20,1,0)) %>%
mutate(age_21_22 = ifelse(age_screening>=21 & age_screening<=22,1,0)) %>%
mutate(age_23_25 = ifelse(age_screening>=23 & age_screening<=25,1,0)) %>%
mutate(age_26_45 = ifelse(age_screening>=26 & age_screening<=45,1,0)) %>%
mutate(age__45 = ifelse(age_screening>45,1,0)) %>%
mutate(juvenile_felonies__0 = ifelse(juv_fel_count>0,1,0)) %>%
mutate(juvenile_misdemeanors__0 = ifelse(juv_misd_count>0,1,0)) %>%
mutate(juvenile_crimes__0 = ifelse(juv_other_count>0 | juv_fel_count>0 | juv_misd_count>0,1,0)) %>%
mutate(priors_2_3 = ifelse(priors_count==2 | priors_count==3,1,0)) %>%
mutate(priors__0 = ifelse(priors_count==0,1,0)) %>%
mutate(priors__1 = ifelse(priors_count==1,1,0)) %>%
mutate(priors__3 = ifelse(priors_count>3,1,0))
# Filtered as in Compas Analysis.ipynb
# compas <- compas %>%
#   filter(days_b_screening_arrest <= 30) %>%
#   filter(days_b_screening_arrest >= -30) %>%
#   filter(is_recid != -1) %>% # Doesn't remove any rows
#   filter(c_charge_degree != "O") %>% # Doesn't remove any rows
#   filter(score_text != 'N/A')
write_csv(compas, "compas_matlab_bin.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
folder_home <- "../../"
folder_in <- paste0(folder_home,"Data/1_raw/")
folder_out <- paste0(folder_home,"Data/2_preprocessed/")
compas <- read_csv(paste0(folder_in,"compas-scores-two-years.csv"))
nrow(compas)
# There are some redundant features that we can drop
compas <- compas %>%
select(-compas_screening_date, -v_screening_date,
-priors_count_1, -decile_score_1,
-violent_recid,
-type_of_assessment, -v_type_of_assessment)
# Filtering that we attribute to data quality
compas <- compas %>%
filter(!(is.na(c_days_from_compas))) %>%
filter(c_days_from_compas <= 30) %>%
filter(c_charge_degree %in% c("F","M"))
# Format features
compas <- compas %>%
mutate(age_screening =  floor(as.numeric(as.period(interval(dob,screening_date)), "years"))) %>%
mutate(sex_Male = ifelse(sex=="Male",1,0)) %>%
mutate(c_charge_degree_F = if_else(c_charge_degree=="F",1,0)) %>%
mutate(age_18_20 = ifelse(age_screening>=18 & age_screening<=20,1,0)) %>%
mutate(age_21_22 = ifelse(age_screening>=21 & age_screening<=22,1,0)) %>%
mutate(age_23_25 = ifelse(age_screening>=23 & age_screening<=25,1,0)) %>%
mutate(age_26_45 = ifelse(age_screening>=26 & age_screening<=45,1,0)) %>%
mutate(age__45 = ifelse(age_screening>45,1,0)) %>%
mutate(juvenile_felonies__0 = ifelse(juv_fel_count>0,1,0)) %>%
mutate(juvenile_misdemeanors__0 = ifelse(juv_misd_count>0,1,0)) %>%
mutate(juvenile_crimes__0 = ifelse(juv_other_count>0 | juv_fel_count>0 | juv_misd_count>0,1,0)) %>%
mutate(priors_2_3 = ifelse(priors_count==2 | priors_count==3,1,0)) %>%
mutate(priors__0 = ifelse(priors_count==0,1,0)) %>%
mutate(priors__1 = ifelse(priors_count==1,1,0)) %>%
mutate(priors__3 = ifelse(priors_count>3,1,0))
# Filtered as in Compas Analysis.ipynb
# compas <- compas %>%
#   filter(days_b_screening_arrest <= 30) %>%
#   filter(days_b_screening_arrest >= -30) %>%
#   filter(is_recid != -1) %>% # Doesn't remove any rows
#   filter(c_charge_degree != "O") %>% # Doesn't remove any rows
#   filter(score_text != 'N/A')
write_csv(compas, paste0(folder_out,"compas_matlab_bin.csv"))
log(exp(1))
4/12*(1/2*log(1/2) + 1/2*log(1/2))
(1/2*log(1/2) + 1/2*log(1/2))
-4/12*(1/2*log(1/2) + 1/2*log(1/2))
-4/12*(1/2*log(1/2) + 1/2*log(1/2))
?log
log(2,2)
-4/12*(1/2*log(1/2,2) + 1/2*log(1/2,2))
4/12
-(5/8*log(5/8,2) + 3/8*log(3/8,2))
4/12+8/12*0.954434
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
folder_home <- "../../"
folder_in <- paste0(folder_home,"Data/1_raw/")
folder_out <- paste0(folder_home,"Data/2_preprocessed/")
compas <- read_csv(paste0(folder_in,"compas-scores-two-years.csv"))
nrow(compas)
# There are some redundant features that we can drop
compas <- compas %>%
select(-compas_screening_date, -v_screening_date,
-priors_count_1, -decile_score_1,
-violent_recid,
-type_of_assessment, -v_type_of_assessment)
is.na(compas$c_days_from_compas)
which(is.na(compas$c_days_from_compas))
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
folder_home <- "../../"
folder_in <- paste0(folder_home,"Data/1_raw/")
folder_out <- paste0(folder_home,"Data/2_preprocessed/")
compas <- read_csv(paste0(folder_in,"compas-scores-two-years.csv"))
nrow(compas)
# There are some redundant features that we can drop
compas <- compas %>%
select(-compas_screening_date, -v_screening_date,
-priors_count_1, -decile_score_1,
-violent_recid,
-type_of_assessment, -v_type_of_assessment)
# Filtering that we attribute to data quality
compas <- compas %>%
filter(!(is.na(c_days_from_compas))) %>%
filter(c_days_from_compas <= 30) %>%
filter(c_charge_degree %in% c("F","M"))
# Format features
compas <- compas %>%
mutate(age_screening =  floor(as.numeric(as.period(interval(dob,screening_date)), "years"))) %>%
mutate(sex_Male = ifelse(sex=="Male",1,0)) %>%
mutate(c_charge_degree_F = if_else(c_charge_degree=="F",1,0)) %>%
mutate(age_18_20 = ifelse(age_screening>=18 & age_screening<=20,1,0)) %>%
mutate(age_21_22 = ifelse(age_screening>=21 & age_screening<=22,1,0)) %>%
mutate(age_23_25 = ifelse(age_screening>=23 & age_screening<=25,1,0)) %>%
mutate(age_26_45 = ifelse(age_screening>=26 & age_screening<=45,1,0)) %>%
mutate(age__45 = ifelse(age_screening>45,1,0)) %>%
mutate(juvenile_felonies__0 = ifelse(juv_fel_count>0,1,0)) %>%
mutate(juvenile_misdemeanors__0 = ifelse(juv_misd_count>0,1,0)) %>%
mutate(juvenile_crimes__0 = ifelse(juv_other_count>0 | juv_fel_count>0 | juv_misd_count>0,1,0)) %>%
mutate(priors_2_3 = ifelse(priors_count==2 | priors_count==3,1,0)) %>%
mutate(priors__0 = ifelse(priors_count==0,1,0)) %>%
mutate(priors__1 = ifelse(priors_count==1,1,0)) %>%
mutate(priors__3 = ifelse(priors_count>3,1,0))
# Filtered as in Compas Analysis.ipynb
# compas <- compas %>%
#   filter(days_b_screening_arrest <= 30) %>%
#   filter(days_b_screening_arrest >= -30) %>%
#   filter(is_recid != -1) %>% # Doesn't remove any rows
#   filter(c_charge_degree != "O") %>% # Doesn't remove any rows
#   filter(score_text != 'N/A')
write_csv(compas, paste0(folder_out,"compas_matlab_bin.csv"))
install.packages("R.Matlab")
install.packages("R.matlab")
file = "/Users/beaucoker/Documents/Duke_MSS/Range_of_Effects/MATLAB/Recidivism/v2/SVM/svm_input_bin_decile_score.mat"
df =  readMat(file)
library(R.matlab)
file = "/Users/beaucoker/Documents/Duke_MSS/Range_of_Effects/MATLAB/Recidivism/v2/SVM/svm_input_bin_decile_score.mat"
df =  readMat(file)
df$xnew
class(df$xnew)
df$new[[1]]
df$xnew[[1]]
df$xnew.id[[1]]
df$xnew.id
names(df)
df$xnew.id
df$MCOS
df$y
df$data.names
file = "/Users/beaucoker/Documents/Duke_MSS/Range_of_Effects/MATLAB/Recidivism/v2/SVM/svm_input_bin_decile_score.mat"
df =  readMat(file)
str(df)
rm(list=ls())
# Old
file0 = "/Users/beaucoker/Documents/Duke_MSS/Range_of_Effects/MATLAB/Recidivism/v2/SVM/svm_input_bin_decile_score.mat"
mat0 =  readMat(file0)
# New
file1 = "/Users/beaucoker/Documents/Duke_MSS/Range_of_Effects/hacking_intervals/Recidivism/Data/3_setup_svm/svm_input_bin_decile_score.mat"
mat1 =  readMat(file1)
mat0$VdV = mat1$V - mat0$V
dV = mat1$V - mat0$V
View(dV)
max(dV)
dV = mat1$V == mat0$V
dV
all(mat1$V == mat0$V)
mat0$xnew
mat0$xnew[[1]]
[[1]]
mat0$xnew[[1]][[1]]
mat0$u.group
ngroup = max(length(mat0$u.group), length(mat1$u.group))
apply(1:ngroup, function(i) all(mat1$xnew[[i]][[1]]==mat0$xnew[[i]][[1]]))
sapply(1:ngroup, function(i) all(mat1$xnew[[i]][[1]]==mat0$xnew[[i]][[1]]))
View(mat0$xnew[[1]][[1]])
View(mat1$xnew[[1]][[1]])
